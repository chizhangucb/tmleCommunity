% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DatKeepClass.R
\docType{class}
\name{DatKeepClass}
\alias{DatKeepClass}
\title{R6 class for storing, managing, subsetting and manipulating the input data.}
\format{An \code{\link{R6Class}} generator object}
\usage{
DatKeepClass
}
\description{
\code{DatKeepClass} allows user to access the input data. The processed covariates from sVar.object are stored as a matrix in
 (\code{private$.mat.sVar}). This class could subset, combine, normalize, discretize and binarize covariates in (A, W, E). For 
                                                          
 For disretization of continous and categorical variables, it can automatically detect / set covariates type (binary, categor, 
 contin), detect / set bin intervals, and construct bin indicators. Besides, it provides methods for generating new exposures under 
 user-specific arbitrary intervention g^{star} through \code{self$make.dat.sVar}, and allows user to replace missing values with                                                 
 user-specific \code{gvars$misXreplace} (Default to 0). Its pointers will be passed on to \code{GenericModel} functions: using in
 \code{$fit()}, \code{$predict()} and \code{$predictAeqa()}.
}
\details{
\itemize{
   \item{\code{norm.c.sVars}} - \code{flag} if \code{TRUE} normalize continous covariates.
   \item{\code{mat.bin.sVar}} - Matrix of the binary indicators created from discretization of continuous covariate \code{active.bin.sVar}.
   \item{\code{ord.sVar}} - Ordinal (categorical) transformation of a continous covariate \code{sVar}.
   \item{\code{obs.wts}} - Vectopr of observation (sampling) weights (of length \code{ndat.sVar}). If NULL, assumed to be all 1. 
   \item{\code{YnodeVals}} - Vector of outcome values (Ynode) in observed data
   \item{\code{det.Y}} - Logical vector, where \code{YnodeVals[det.Y==TRUE]} are deterministic and set to NA. 
   \item{\code{p}} - Number of Monte-Carlo simulations performed 
   \item{\code{ndat.sVar}} - Number of observations in the observed data frame.
}
}
\section{Methods}{

\describe{
  \item{\code{new(Odata, nodes, YnodeVals, det.Y, norm.c.sVars = FALSE, ..)}}{...}
  \item{\code{addYnode(YnodeVals, det.Y)}}{...}
  \item{\code{addObsWeights(obs.wts)}}{...}                                                        
  \item{\code{evalsubst(subset_vars, subset_exprs = NULL)}}{...}
  \item{\code{get.dat.sVar(rowsubset = TRUE, covars)}}{...}
  \item{\code{get.outvar(rowsubset = TRUE, var)}}{...}
  \item{\code{def.types.sVar(type.sVar = NULL)}}{...}
  \item{\code{set.sVar.type(name.sVar, new.type)}}{...}
  \item{\code{get.sVar.type(name.sVar)}}{...}
  \item{\code{is.sVar.cont(name.sVar)}}{...}
  \item{\code{is.sVar.cat(name.sVar)}}{...}
  \item{\code{get.sVar(name.sVar)}}{...}
  \item{\code{set.sVar(name.sVar, new.sVarVal)}}{...}
  \item{\code{bin.nms.sVar(name.sVar, nbins)}}{...}
  \item{\code{detect.sVar.intrvls(name.sVar, nbins, bin_bymass, bin_bydhist, max_nperbin)}}{...}
  \item{\code{detect.cat.sVar.levels(name.sVar)}}{...}
  \item{\code{get.sVar.bw(name.sVar, intervals)}}{...}
  \item{\code{get.sVar.bwdiff(name.sVar, intervals)}}{...}
  \item{\code{binirize.sVar(name.sVar, ...)}}{...}
  \item{\code{norm.cont.sVars()}}{...}
  \item{\code{fixmiss_sVar()}}{...}
  \item{\code{make.dat.sVar(p = 1, f.g_fun = NULL, regform = NULL)}}{...}
}
}

\section{Active Bindings}{

\describe{
   \item{\code{names.sVar}}{...}
   \item{\code{names.c.sVar}}{...}
   \item{\code{ncols.sVar}}{...}
   \item{\code{nobs}}{...}
   \item{\code{dat.sVar}}{...}
   \item{\code{dat.bin.sVar}}{...}
   \item{\code{active.bin.sVar}}{}
   \item{\code{emptydat.sVar}}{...}
   \item{\code{emptydat.bin.sVar}}{...}
   \item{\code{noNA.Ynodevals}}{...}
   \item{\code{nodes}}{...}
   \item{\code{type.sVar}}{}
}
}

\keyword{R6}
\keyword{class}
