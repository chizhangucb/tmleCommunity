% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tmleCommunity.R
\name{tmleCommunity}
\alias{tmleCommunity}
\title{Estimate Marginal Treatment Effects For Arbitrary (Stochastic) Interventions}
\usage{
tmleCommunity(data, Ynode, Anodes, Wnodes, Enodes = NULL,
  StratifyInd = NULL, YnodeDet = NULL, f_gstar1, f_gstar2 = NULL,
  Qform = NULL, Qbounds = NULL, alpha = 0.995, fluctuation = "logistic",
  f.g0 = NULL, hform.g0 = NULL, hform.gstar = NULL, lbound = 0.005,
  obs.wts = NULL, h.g0_GenericModel = NULL, h.gstar_GenericModel = NULL,
  savetime.fit.hbars = TRUE, TMLE.targetStep = c("tmle.intercept",
  "tmle.covariate"), n_MCsims = 1, CI_alpha = 0.05, rndseed = NULL,
  verbose = TRUE)
}
\arguments{
\item{data}{\code{data.frame} with named columns, containing \code{Wnodes}, \code{Anode}, \code{Ynode} 
and possibly \code{Enodes} and \code{communityIndex}.}

\item{Ynode}{Column names or indices in \code{data} of outcome variable name. Outcome can be either binary or continuous. 
This can instead be specified on the left-side of the regression formula in argument \code{Qform}.}

\item{Anodes}{Column names or indices in \code{data} of exposure (treatment) variables; exposures can be either binary, categorical or continuous.}

\item{StratifyInd}{Optional column name or index in \code{data} of community identifier variable. If known, stratify on community level when 
estimating outcome and treatment mechanisms. If NULL, pool over all communities.}

\item{YnodeDet}{Optional column name or index in \code{data} of deterministic values of outcome Ynode, coded as (TRUE/FALSE) or (1/0). If TRUE/1,}

\item{f_gstar1}{Either a function or a vector or a matrix/ data frame of counterfactual exposures, dependin on the number of exposure variables.
If a matrix/ data frame, its number of rows must be either nrow(data) or 1 (constant exposure assigned to all observations), and its number of 
columns must be length(Anodes). If a vector, it must be of length nrow(data) or 1. If a function, it must return a data frame of counterfactual
exposures sampled based on Anodes, Wnodes (and possibly Enodes and communityIndex) passed as a named argument "data". Thus, the function must 
include "data" as one of its argument names. The interventions defined by f_gstar1 can be static, dynamic or stochastic. See Exmaples below.}

\item{f_gstar2}{Either a function or a vector or a matrix/ data frame of counterfactual exposures, dependin on the number of exposure variables.
It has the same components and requirements as f_gstar1}

\item{Qform}{Character vector of regression formula for Ynode. If not specified, the outcome variable is regressed on all covariates included in}

\item{Qbounds}{Upper and lower bounds on Y and predicted values for initial Q. Defaults to the range of Y, widened by 10% of the min and max values.}

\item{alpha}{Used to keep predicted values for initial Q bounded away from (0,1) for logistic fluctuation.}

\item{fluctuation}{Default to "logistic", it could also be "linear" (for targeting step).}

\item{hform.g0}{Character vector of regression formula for estimating the conditional density of P(A | W, E) under the observed treatment mechanism
g0. If not specified, its form will be Anodes ~ Wnodes + Enodes. If there are more than one expsosure, it fits a joint probability.}

\item{hform.gstar}{Character vector of regression formula for estimating the conditional density P(A | W, E) under interventions f_gstar1 or f_gstar2. 
If not specified, it follows the same rule used in hform.g0.}

\item{lbound}{Value between (0,1) for truncation of predicted P(A | W, E). Default to 0.005}

\item{obs.wts}{Optional vector of observation (sampling) weights (of length nrow(data)). If NULL, assumed to be all 1.}

\item{h.g0_GenericModel}{Previously fitted models for P(A | W, E) under g0, one of returns of tmleCommunity.function. If known, predictions
for P(A=a | W=w, E=e) under g0 are based on the fitted models in \code{h.g0_GenericModel}.}

\item{h.gstar_GenericModel}{Previously fitted models for P(A^* | W, E) under gstar, one of returns of tmleCommunity.function. If known,
Predictions for P(A=a | W=w, E=e) under gstar are based on the fitted models in \code{h.gstar_GenericModel}.}

\item{savetime.fit.hbars}{Logical for saving time when fitting fit.hbars. If true,}

\item{TMLE.targetStep}{TMLE targeting step method, either "tmle.intercept" (Default) or "tmle.covariate".}

\item{n_MCsims}{Number of simulations for Monte-Carlo analysis. Each simulation generates new exposures under f_gstar1 or f_gstar2, with a sample 
size of nrow(data). Then these expsosures are used when fitting the conditional densities P(A | W, E).}

\item{rndseed}{Random seed for controlling sampling A under f_gdelta1 or f_gdelta2 (reproducibility)}

\item{verbose}{Flag. If TRUE, print status messages. Default to TRUE.}

\item{Wndoes}{Column names or indices in \code{data} of individual-level baseline covariates. Factors are not currently allowed.}

\item{Endoes}{Optional column names or indices in \code{data} of community-level baseline covariates. Factors are not currently allowed.}

\item{f_g0}{Optional function used to specify model knowledge about value of Anodes. It estimates \code{P(A | W, E)} under \code{g0} by 
sampling a large vector/ data frame of Anode (of length or number of rows \code{nrow(data)*n_MCsims}) from \code{f_g0}}
}
\description{
Estimate the marginal treatment effect among i.i.d units using \strong{TMLE} (targeted maximum likelihood estimation). It also provide
\strong{IPTW} (the inverse-probability-of-treatment or Horvitz-Thompson) and \strong{GCOMP} (parametric G-computation formula).
}
